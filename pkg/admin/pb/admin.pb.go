// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: admin.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminBookingSearchCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment_Mode     string `protobuf:"bytes,1,opt,name=Payment_Mode,json=PaymentMode,proto3" json:"Payment_Mode,omitempty"`
	Booking_Status   string `protobuf:"bytes,2,opt,name=Booking_Status,json=BookingStatus,proto3" json:"Booking_Status,omitempty"`
	Cancelled_Status bool   `protobuf:"varint,3,opt,name=Cancelled_Status,json=CancelledStatus,proto3" json:"Cancelled_Status,omitempty"`
	User_Email       string `protobuf:"bytes,4,opt,name=User_Email,json=UserEmail,proto3" json:"User_Email,omitempty"`
	Booking_ID       string `protobuf:"bytes,5,opt,name=Booking_ID,json=BookingID,proto3" json:"Booking_ID,omitempty"`
	Book_Date        string `protobuf:"bytes,6,opt,name=Book_Date,json=BookDate,proto3" json:"Book_Date,omitempty"`
	Start_Date       string `protobuf:"bytes,7,opt,name=Start_Date,json=StartDate,proto3" json:"Start_Date,omitempty"`
	Coordinator_ID   uint32 `protobuf:"varint,8,opt,name=Coordinator_ID,json=CoordinatorID,proto3" json:"Coordinator_ID,omitempty"`
	Page             int64  `protobuf:"varint,9,opt,name=Page,proto3" json:"Page,omitempty"`
	Category_ID      int64  `protobuf:"varint,10,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
}

func (x *AdminBookingSearchCriteria) Reset() {
	*x = AdminBookingSearchCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminBookingSearchCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminBookingSearchCriteria) ProtoMessage() {}

func (x *AdminBookingSearchCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminBookingSearchCriteria.ProtoReflect.Descriptor instead.
func (*AdminBookingSearchCriteria) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{0}
}

func (x *AdminBookingSearchCriteria) GetPayment_Mode() string {
	if x != nil {
		return x.Payment_Mode
	}
	return ""
}

func (x *AdminBookingSearchCriteria) GetBooking_Status() string {
	if x != nil {
		return x.Booking_Status
	}
	return ""
}

func (x *AdminBookingSearchCriteria) GetCancelled_Status() bool {
	if x != nil {
		return x.Cancelled_Status
	}
	return false
}

func (x *AdminBookingSearchCriteria) GetUser_Email() string {
	if x != nil {
		return x.User_Email
	}
	return ""
}

func (x *AdminBookingSearchCriteria) GetBooking_ID() string {
	if x != nil {
		return x.Booking_ID
	}
	return ""
}

func (x *AdminBookingSearchCriteria) GetBook_Date() string {
	if x != nil {
		return x.Book_Date
	}
	return ""
}

func (x *AdminBookingSearchCriteria) GetStart_Date() string {
	if x != nil {
		return x.Start_Date
	}
	return ""
}

func (x *AdminBookingSearchCriteria) GetCoordinator_ID() uint32 {
	if x != nil {
		return x.Coordinator_ID
	}
	return 0
}

func (x *AdminBookingSearchCriteria) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AdminBookingSearchCriteria) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

type AdminDashboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet            int64 `protobuf:"varint,1,opt,name=Wallet,proto3" json:"Wallet,omitempty"`
	Today             int64 `protobuf:"varint,2,opt,name=Today,proto3" json:"Today,omitempty"`
	Monthly           int64 `protobuf:"varint,3,opt,name=Monthly,proto3" json:"Monthly,omitempty"`
	Coordinator_Count int64 `protobuf:"varint,4,opt,name=Coordinator_Count,json=CoordinatorCount,proto3" json:"Coordinator_Count,omitempty"`
	Users_Count       int64 `protobuf:"varint,5,opt,name=Users_Count,json=UsersCount,proto3" json:"Users_Count,omitempty"`
}

func (x *AdminDashboard) Reset() {
	*x = AdminDashboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDashboard) ProtoMessage() {}

func (x *AdminDashboard) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDashboard.ProtoReflect.Descriptor instead.
func (*AdminDashboard) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{1}
}

func (x *AdminDashboard) GetWallet() int64 {
	if x != nil {
		return x.Wallet
	}
	return 0
}

func (x *AdminDashboard) GetToday() int64 {
	if x != nil {
		return x.Today
	}
	return 0
}

func (x *AdminDashboard) GetMonthly() int64 {
	if x != nil {
		return x.Monthly
	}
	return 0
}

func (x *AdminDashboard) GetCoordinator_Count() int64 {
	if x != nil {
		return x.Coordinator_Count
	}
	return 0
}

func (x *AdminDashboard) GetUsers_Count() int64 {
	if x != nil {
		return x.Users_Count
	}
	return 0
}

type AdminHistories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Histories []*AdminHistory `protobuf:"bytes,1,rep,name=Histories,proto3" json:"Histories,omitempty"`
}

func (x *AdminHistories) Reset() {
	*x = AdminHistories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminHistories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminHistories) ProtoMessage() {}

func (x *AdminHistories) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminHistories.ProtoReflect.Descriptor instead.
func (*AdminHistories) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{2}
}

func (x *AdminHistories) GetHistories() []*AdminHistory {
	if x != nil {
		return x.Histories
	}
	return nil
}

type AdminHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               int64                    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Payment_Mode     string                   `protobuf:"bytes,2,opt,name=Payment_Mode,json=PaymentMode,proto3" json:"Payment_Mode,omitempty"`
	Booking_Status   string                   `protobuf:"bytes,3,opt,name=Booking_Status,json=BookingStatus,proto3" json:"Booking_Status,omitempty"`
	Cancelled_Status string                   `protobuf:"bytes,4,opt,name=Cancelled_Status,json=CancelledStatus,proto3" json:"Cancelled_Status,omitempty"`
	Total_Price      int64                    `protobuf:"varint,5,opt,name=Total_Price,json=TotalPrice,proto3" json:"Total_Price,omitempty"`
	User_ID          int64                    `protobuf:"varint,6,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Booking_ID       string                   `protobuf:"bytes,7,opt,name=Booking_ID,json=BookingID,proto3" json:"Booking_ID,omitempty"`
	Book_Date        string                   `protobuf:"bytes,8,opt,name=Book_Date,json=BookDate,proto3" json:"Book_Date,omitempty"`
	Start_Date       string                   `protobuf:"bytes,9,opt,name=Start_Date,json=StartDate,proto3" json:"Start_Date,omitempty"`
	Travellers       []*AdminTravellerDetails `protobuf:"bytes,10,rep,name=Travellers,proto3" json:"Travellers,omitempty"`
	Paid_Amount      int64                    `protobuf:"varint,11,opt,name=Paid_Amount,json=PaidAmount,proto3" json:"Paid_Amount,omitempty"`
}

func (x *AdminHistory) Reset() {
	*x = AdminHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminHistory) ProtoMessage() {}

func (x *AdminHistory) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminHistory.ProtoReflect.Descriptor instead.
func (*AdminHistory) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{3}
}

func (x *AdminHistory) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminHistory) GetPayment_Mode() string {
	if x != nil {
		return x.Payment_Mode
	}
	return ""
}

func (x *AdminHistory) GetBooking_Status() string {
	if x != nil {
		return x.Booking_Status
	}
	return ""
}

func (x *AdminHistory) GetCancelled_Status() string {
	if x != nil {
		return x.Cancelled_Status
	}
	return ""
}

func (x *AdminHistory) GetTotal_Price() int64 {
	if x != nil {
		return x.Total_Price
	}
	return 0
}

func (x *AdminHistory) GetUser_ID() int64 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *AdminHistory) GetBooking_ID() string {
	if x != nil {
		return x.Booking_ID
	}
	return ""
}

func (x *AdminHistory) GetBook_Date() string {
	if x != nil {
		return x.Book_Date
	}
	return ""
}

func (x *AdminHistory) GetStart_Date() string {
	if x != nil {
		return x.Start_Date
	}
	return ""
}

func (x *AdminHistory) GetTravellers() []*AdminTravellerDetails {
	if x != nil {
		return x.Travellers
	}
	return nil
}

func (x *AdminHistory) GetPaid_Amount() int64 {
	if x != nil {
		return x.Paid_Amount
	}
	return 0
}

type AdminTravellerDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string           `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Age         string           `protobuf:"bytes,2,opt,name=Age,proto3" json:"Age,omitempty"`
	Gender      string           `protobuf:"bytes,3,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Activity_ID []string         `protobuf:"bytes,4,rep,name=Activity_ID,json=ActivityID,proto3" json:"Activity_ID,omitempty"`
	ID          int64            `protobuf:"varint,5,opt,name=ID,proto3" json:"ID,omitempty"`
	Activity    []*AdminActivity `protobuf:"bytes,6,rep,name=Activity,proto3" json:"Activity,omitempty"`
}

func (x *AdminTravellerDetails) Reset() {
	*x = AdminTravellerDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminTravellerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminTravellerDetails) ProtoMessage() {}

func (x *AdminTravellerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminTravellerDetails.ProtoReflect.Descriptor instead.
func (*AdminTravellerDetails) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{4}
}

func (x *AdminTravellerDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminTravellerDetails) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *AdminTravellerDetails) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *AdminTravellerDetails) GetActivity_ID() []string {
	if x != nil {
		return x.Activity_ID
	}
	return nil
}

func (x *AdminTravellerDetails) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminTravellerDetails) GetActivity() []*AdminActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type AdminUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*AdminUser `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
}

func (x *AdminUsers) Reset() {
	*x = AdminUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUsers) ProtoMessage() {}

func (x *AdminUsers) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUsers.ProtoReflect.Descriptor instead.
func (*AdminUsers) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{5}
}

func (x *AdminUsers) GetUsers() []*AdminUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type AdminUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Phone    string `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Password string `protobuf:"bytes,5,opt,name=Password,proto3" json:"Password,omitempty"`
	Role     string `protobuf:"bytes,6,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *AdminUser) Reset() {
	*x = AdminUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUser) ProtoMessage() {}

func (x *AdminUser) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUser.ProtoReflect.Descriptor instead.
func (*AdminUser) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{6}
}

func (x *AdminUser) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AdminUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AdminUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AdminUser) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type AdminView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Page   int64  `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
}

func (x *AdminView) Reset() {
	*x = AdminView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminView) ProtoMessage() {}

func (x *AdminView) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminView.ProtoReflect.Descriptor instead.
func (*AdminView) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{7}
}

func (x *AdminView) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AdminView) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AdminView) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type AdminCategories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category []*AdminCategory `protobuf:"bytes,1,rep,name=Category,proto3" json:"Category,omitempty"`
}

func (x *AdminCategories) Reset() {
	*x = AdminCategories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCategories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCategories) ProtoMessage() {}

func (x *AdminCategories) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCategories.ProtoReflect.Descriptor instead.
func (*AdminCategories) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{8}
}

func (x *AdminCategories) GetCategory() []*AdminCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

type AdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	ID      int64  `protobuf:"varint,3,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *AdminResponse) Reset() {
	*x = AdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminResponse) ProtoMessage() {}

func (x *AdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminResponse.ProtoReflect.Descriptor instead.
func (*AdminResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{9}
}

func (x *AdminResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AdminResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AdminResponse) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type AdminCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category_ID int64  `protobuf:"varint,1,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Category    string `protobuf:"bytes,2,opt,name=Category,proto3" json:"Category,omitempty"`
}

func (x *AdminCategory) Reset() {
	*x = AdminCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCategory) ProtoMessage() {}

func (x *AdminCategory) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCategory.ProtoReflect.Descriptor instead.
func (*AdminCategory) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{10}
}

func (x *AdminCategory) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *AdminCategory) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type AdminLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Role     string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *AdminLogin) Reset() {
	*x = AdminLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLogin) ProtoMessage() {}

func (x *AdminLogin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLogin.ProtoReflect.Descriptor instead.
func (*AdminLogin) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{11}
}

func (x *AdminLogin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AdminLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AdminLogin) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type AdminActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity_ID    int64  `protobuf:"varint,1,opt,name=Activity_ID,json=ActivityID,proto3" json:"Activity_ID,omitempty"`
	Activity_Name  string `protobuf:"bytes,2,opt,name=Activity_Name,json=ActivityName,proto3" json:"Activity_Name,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Location       string `protobuf:"bytes,4,opt,name=Location,proto3" json:"Location,omitempty"`
	Activity_Type  string `protobuf:"bytes,5,opt,name=Activity_Type,json=ActivityType,proto3" json:"Activity_Type,omitempty"`
	Amount         int64  `protobuf:"varint,6,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Date           string `protobuf:"bytes,7,opt,name=Date,proto3" json:"Date,omitempty"`
	Time           string `protobuf:"bytes,8,opt,name=Time,proto3" json:"Time,omitempty"`
	Destination_ID int64  `protobuf:"varint,9,opt,name=Destination_ID,json=DestinationID,proto3" json:"Destination_ID,omitempty"`
}

func (x *AdminActivity) Reset() {
	*x = AdminActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminActivity) ProtoMessage() {}

func (x *AdminActivity) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminActivity.ProtoReflect.Descriptor instead.
func (*AdminActivity) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{12}
}

func (x *AdminActivity) GetActivity_ID() int64 {
	if x != nil {
		return x.Activity_ID
	}
	return 0
}

func (x *AdminActivity) GetActivity_Name() string {
	if x != nil {
		return x.Activity_Name
	}
	return ""
}

func (x *AdminActivity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AdminActivity) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *AdminActivity) GetActivity_Type() string {
	if x != nil {
		return x.Activity_Type
	}
	return ""
}

func (x *AdminActivity) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AdminActivity) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AdminActivity) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *AdminActivity) GetDestination_ID() int64 {
	if x != nil {
		return x.Destination_ID
	}
	return 0
}

type AdminFoodMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foodmenu_ID int64  `protobuf:"varint,1,opt,name=Foodmenu_ID,json=FoodmenuID,proto3" json:"Foodmenu_ID,omitempty"`
	Package_ID  int64  `protobuf:"varint,2,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
	Breakfast   string `protobuf:"bytes,3,opt,name=Breakfast,proto3" json:"Breakfast,omitempty"`
	Lunch       string `protobuf:"bytes,4,opt,name=Lunch,proto3" json:"Lunch,omitempty"`
	Dinner      string `protobuf:"bytes,5,opt,name=Dinner,proto3" json:"Dinner,omitempty"`
	Date        string `protobuf:"bytes,6,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *AdminFoodMenu) Reset() {
	*x = AdminFoodMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminFoodMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminFoodMenu) ProtoMessage() {}

func (x *AdminFoodMenu) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminFoodMenu.ProtoReflect.Descriptor instead.
func (*AdminFoodMenu) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{13}
}

func (x *AdminFoodMenu) GetFoodmenu_ID() int64 {
	if x != nil {
		return x.Foodmenu_ID
	}
	return 0
}

func (x *AdminFoodMenu) GetPackage_ID() int64 {
	if x != nil {
		return x.Package_ID
	}
	return 0
}

func (x *AdminFoodMenu) GetBreakfast() string {
	if x != nil {
		return x.Breakfast
	}
	return ""
}

func (x *AdminFoodMenu) GetLunch() string {
	if x != nil {
		return x.Lunch
	}
	return ""
}

func (x *AdminFoodMenu) GetDinner() string {
	if x != nil {
		return x.Dinner
	}
	return ""
}

func (x *AdminFoodMenu) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type AdminDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination_ID      int64            `protobuf:"varint,1,opt,name=Destination_ID,json=DestinationID,proto3" json:"Destination_ID,omitempty"`
	Destination_Name    string           `protobuf:"bytes,2,opt,name=Destination_Name,json=DestinationName,proto3" json:"Destination_Name,omitempty"`
	Description         string           `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Min_Price           int64            `protobuf:"varint,4,opt,name=Min_Price,json=MinPrice,proto3" json:"Min_Price,omitempty"`
	Max_Capacity        int64            `protobuf:"varint,5,opt,name=Max_Capacity,json=MaxCapacity,proto3" json:"Max_Capacity,omitempty"`
	Image               string           `protobuf:"bytes,6,opt,name=Image,proto3" json:"Image,omitempty"`
	Activity            []*AdminActivity `protobuf:"bytes,7,rep,name=Activity,proto3" json:"Activity,omitempty"`
	Package_ID          int64            `protobuf:"varint,8,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
	Transportation_Mode string           `protobuf:"bytes,9,opt,name=Transportation_Mode,json=TransportationMode,proto3" json:"Transportation_Mode,omitempty"`
	Arrival_Location    string           `protobuf:"bytes,10,opt,name=Arrival_Location,json=ArrivalLocation,proto3" json:"Arrival_Location,omitempty"`
}

func (x *AdminDestination) Reset() {
	*x = AdminDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminDestination) ProtoMessage() {}

func (x *AdminDestination) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminDestination.ProtoReflect.Descriptor instead.
func (*AdminDestination) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{14}
}

func (x *AdminDestination) GetDestination_ID() int64 {
	if x != nil {
		return x.Destination_ID
	}
	return 0
}

func (x *AdminDestination) GetDestination_Name() string {
	if x != nil {
		return x.Destination_Name
	}
	return ""
}

func (x *AdminDestination) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AdminDestination) GetMin_Price() int64 {
	if x != nil {
		return x.Min_Price
	}
	return 0
}

func (x *AdminDestination) GetMax_Capacity() int64 {
	if x != nil {
		return x.Max_Capacity
	}
	return 0
}

func (x *AdminDestination) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *AdminDestination) GetActivity() []*AdminActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *AdminDestination) GetPackage_ID() int64 {
	if x != nil {
		return x.Package_ID
	}
	return 0
}

func (x *AdminDestination) GetTransportation_Mode() string {
	if x != nil {
		return x.Transportation_Mode
	}
	return ""
}

func (x *AdminDestination) GetArrival_Location() string {
	if x != nil {
		return x.Arrival_Location
	}
	return ""
}

type AdminPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package_ID        int64               `protobuf:"varint,1,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
	Package_Name      string              `protobuf:"bytes,2,opt,name=Package_Name,json=PackageName,proto3" json:"Package_Name,omitempty"`
	Coorinator_ID     int64               `protobuf:"varint,3,opt,name=Coorinator_ID,json=CoorinatorID,proto3" json:"Coorinator_ID,omitempty"`
	Start_Location    string              `protobuf:"bytes,4,opt,name=Start_Location,json=StartLocation,proto3" json:"Start_Location,omitempty"`
	Available_Space   int64               `protobuf:"varint,5,opt,name=Available_Space,json=AvailableSpace,proto3" json:"Available_Space,omitempty"`
	Start_Date        string              `protobuf:"bytes,6,opt,name=Start_Date,json=StartDate,proto3" json:"Start_Date,omitempty"`
	Start_Time        string              `protobuf:"bytes,7,opt,name=Start_Time,json=StartTime,proto3" json:"Start_Time,omitempty"`
	End_Date          string              `protobuf:"bytes,8,opt,name=End_Date,json=EndDate,proto3" json:"End_Date,omitempty"`
	Price             int64               `protobuf:"varint,9,opt,name=Price,proto3" json:"Price,omitempty"`
	Image             string              `protobuf:"bytes,10,opt,name=Image,proto3" json:"Image,omitempty"`
	Destination_Count int64               `protobuf:"varint,11,opt,name=Destination_Count,json=DestinationCount,proto3" json:"Destination_Count,omitempty"`
	Destination       string              `protobuf:"bytes,12,opt,name=Destination,proto3" json:"Destination,omitempty"`
	Description       string              `protobuf:"bytes,13,opt,name=Description,proto3" json:"Description,omitempty"`
	Max_Capacity      int64               `protobuf:"varint,14,opt,name=Max_Capacity,json=MaxCapacity,proto3" json:"Max_Capacity,omitempty"`
	Category_ID       int64               `protobuf:"varint,15,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Category          *AdminCategory      `protobuf:"bytes,16,opt,name=Category,proto3" json:"Category,omitempty"`
	Destinations      []*AdminDestination `protobuf:"bytes,17,rep,name=Destinations,proto3" json:"Destinations,omitempty"`
}

func (x *AdminPackage) Reset() {
	*x = AdminPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminPackage) ProtoMessage() {}

func (x *AdminPackage) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminPackage.ProtoReflect.Descriptor instead.
func (*AdminPackage) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{15}
}

func (x *AdminPackage) GetPackage_ID() int64 {
	if x != nil {
		return x.Package_ID
	}
	return 0
}

func (x *AdminPackage) GetPackage_Name() string {
	if x != nil {
		return x.Package_Name
	}
	return ""
}

func (x *AdminPackage) GetCoorinator_ID() int64 {
	if x != nil {
		return x.Coorinator_ID
	}
	return 0
}

func (x *AdminPackage) GetStart_Location() string {
	if x != nil {
		return x.Start_Location
	}
	return ""
}

func (x *AdminPackage) GetAvailable_Space() int64 {
	if x != nil {
		return x.Available_Space
	}
	return 0
}

func (x *AdminPackage) GetStart_Date() string {
	if x != nil {
		return x.Start_Date
	}
	return ""
}

func (x *AdminPackage) GetStart_Time() string {
	if x != nil {
		return x.Start_Time
	}
	return ""
}

func (x *AdminPackage) GetEnd_Date() string {
	if x != nil {
		return x.End_Date
	}
	return ""
}

func (x *AdminPackage) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AdminPackage) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *AdminPackage) GetDestination_Count() int64 {
	if x != nil {
		return x.Destination_Count
	}
	return 0
}

func (x *AdminPackage) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *AdminPackage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AdminPackage) GetMax_Capacity() int64 {
	if x != nil {
		return x.Max_Capacity
	}
	return 0
}

func (x *AdminPackage) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *AdminPackage) GetCategory() *AdminCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *AdminPackage) GetDestinations() []*AdminDestination {
	if x != nil {
		return x.Destinations
	}
	return nil
}

type AdminPackages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packages []*AdminPackage `protobuf:"bytes,1,rep,name=Packages,proto3" json:"Packages,omitempty"`
}

func (x *AdminPackages) Reset() {
	*x = AdminPackages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminPackages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminPackages) ProtoMessage() {}

func (x *AdminPackages) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminPackages.ProtoReflect.Descriptor instead.
func (*AdminPackages) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{16}
}

func (x *AdminPackages) GetPackages() []*AdminPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

var File_admin_proto protoreflect.FileDescriptor

var file_admin_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0xe7, 0x02, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x12, 0x21, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x5f, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x22, 0xa6, 0x01, 0x0a, 0x0e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x84, 0x03, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x5f, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0a, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x50, 0x61, 0x69, 0x64, 0x5f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x50, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb5, 0x01,
	0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x41, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x31, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x09, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x47, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x22,
	0x40, 0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0x51, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x22, 0x52, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x9f, 0x02, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x0d, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xaf, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1f, 0x0a, 0x0b, 0x46, 0x6f,
	0x6f, 0x64, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x46, 0x6f, 0x6f, 0x64, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72,
	0x65, 0x61, 0x6b, 0x66, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42,
	0x72, 0x65, 0x61, 0x6b, 0x66, 0x61, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x75, 0x6e, 0x63,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x44, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x44, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x22, 0x86, 0x03, 0x0a, 0x10, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x5f, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x41, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x5f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xe8, 0x04, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x0c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x43, 0x6f, 0x6f, 0x72, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43,
	0x6f, 0x6f, 0x72, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x45, 0x6e, 0x64,
	0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x5f, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3d,
	0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x2c, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x32, 0xd4, 0x06,
	0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x11, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x33, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56,
	0x69, 0x65, 0x77, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61,
	0x63, 0x61, 0x6b, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56,
	0x69, 0x65, 0x77, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x1a,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x15,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x56, 0x69, 0x65, 0x77, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65,
	0x77, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x10,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x1a,
	0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x37, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x48, 0x0a, 0x12, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69, 0x65,
	0x77, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_admin_proto_rawDescOnce sync.Once
	file_admin_proto_rawDescData = file_admin_proto_rawDesc
)

func file_admin_proto_rawDescGZIP() []byte {
	file_admin_proto_rawDescOnce.Do(func() {
		file_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_proto_rawDescData)
	})
	return file_admin_proto_rawDescData
}

var file_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_admin_proto_goTypes = []interface{}{
	(*AdminBookingSearchCriteria)(nil), // 0: pb.AdminBookingSearchCriteria
	(*AdminDashboard)(nil),             // 1: pb.AdminDashboard
	(*AdminHistories)(nil),             // 2: pb.AdminHistories
	(*AdminHistory)(nil),               // 3: pb.AdminHistory
	(*AdminTravellerDetails)(nil),      // 4: pb.AdminTravellerDetails
	(*AdminUsers)(nil),                 // 5: pb.AdminUsers
	(*AdminUser)(nil),                  // 6: pb.AdminUser
	(*AdminView)(nil),                  // 7: pb.AdminView
	(*AdminCategories)(nil),            // 8: pb.AdminCategories
	(*AdminResponse)(nil),              // 9: pb.AdminResponse
	(*AdminCategory)(nil),              // 10: pb.AdminCategory
	(*AdminLogin)(nil),                 // 11: pb.AdminLogin
	(*AdminActivity)(nil),              // 12: pb.AdminActivity
	(*AdminFoodMenu)(nil),              // 13: pb.AdminFoodMenu
	(*AdminDestination)(nil),           // 14: pb.AdminDestination
	(*AdminPackage)(nil),               // 15: pb.AdminPackage
	(*AdminPackages)(nil),              // 16: pb.AdminPackages
}
var file_admin_proto_depIdxs = []int32{
	3,  // 0: pb.AdminHistories.Histories:type_name -> pb.AdminHistory
	4,  // 1: pb.AdminHistory.Travellers:type_name -> pb.AdminTravellerDetails
	12, // 2: pb.AdminTravellerDetails.Activity:type_name -> pb.AdminActivity
	6,  // 3: pb.AdminUsers.Users:type_name -> pb.AdminUser
	10, // 4: pb.AdminCategories.Category:type_name -> pb.AdminCategory
	12, // 5: pb.AdminDestination.Activity:type_name -> pb.AdminActivity
	10, // 6: pb.AdminPackage.Category:type_name -> pb.AdminCategory
	14, // 7: pb.AdminPackage.Destinations:type_name -> pb.AdminDestination
	15, // 8: pb.AdminPackages.Packages:type_name -> pb.AdminPackage
	11, // 9: pb.Admin.AdminLoginRequest:input_type -> pb.AdminLogin
	10, // 10: pb.Admin.AdminAddCategory:input_type -> pb.AdminCategory
	7,  // 11: pb.Admin.AdminViewPackages:input_type -> pb.AdminView
	7,  // 12: pb.Admin.AdminViewpackage:input_type -> pb.AdminView
	7,  // 13: pb.Admin.AdminPacakgeStatus:input_type -> pb.AdminView
	7,  // 14: pb.Admin.AdminViewCategories:input_type -> pb.AdminView
	7,  // 15: pb.Admin.AdminViewDestination:input_type -> pb.AdminView
	7,  // 16: pb.Admin.AdminViewActivity:input_type -> pb.AdminView
	7,  // 17: pb.Admin.AdminViewCoordinators:input_type -> pb.AdminView
	7,  // 18: pb.Admin.AdminViewBookings:input_type -> pb.AdminView
	7,  // 19: pb.Admin.AdminViewBooking:input_type -> pb.AdminView
	7,  // 20: pb.Admin.AdminViewDashboard:input_type -> pb.AdminView
	0,  // 21: pb.Admin.AdminSearchBooking:input_type -> pb.AdminBookingSearchCriteria
	7,  // 22: pb.Admin.AdminViewUsers:input_type -> pb.AdminView
	7,  // 23: pb.Admin.AdminViewUser:input_type -> pb.AdminView
	9,  // 24: pb.Admin.AdminLoginRequest:output_type -> pb.AdminResponse
	9,  // 25: pb.Admin.AdminAddCategory:output_type -> pb.AdminResponse
	16, // 26: pb.Admin.AdminViewPackages:output_type -> pb.AdminPackages
	15, // 27: pb.Admin.AdminViewpackage:output_type -> pb.AdminPackage
	9,  // 28: pb.Admin.AdminPacakgeStatus:output_type -> pb.AdminResponse
	8,  // 29: pb.Admin.AdminViewCategories:output_type -> pb.AdminCategories
	14, // 30: pb.Admin.AdminViewDestination:output_type -> pb.AdminDestination
	12, // 31: pb.Admin.AdminViewActivity:output_type -> pb.AdminActivity
	5,  // 32: pb.Admin.AdminViewCoordinators:output_type -> pb.AdminUsers
	2,  // 33: pb.Admin.AdminViewBookings:output_type -> pb.AdminHistories
	3,  // 34: pb.Admin.AdminViewBooking:output_type -> pb.AdminHistory
	1,  // 35: pb.Admin.AdminViewDashboard:output_type -> pb.AdminDashboard
	2,  // 36: pb.Admin.AdminSearchBooking:output_type -> pb.AdminHistories
	5,  // 37: pb.Admin.AdminViewUsers:output_type -> pb.AdminUsers
	6,  // 38: pb.Admin.AdminViewUser:output_type -> pb.AdminUser
	24, // [24:39] is the sub-list for method output_type
	9,  // [9:24] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_admin_proto_init() }
func file_admin_proto_init() {
	if File_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminBookingSearchCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDashboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminHistories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminTravellerDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCategories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminFoodMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminPackages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_proto_goTypes,
		DependencyIndexes: file_admin_proto_depIdxs,
		MessageInfos:      file_admin_proto_msgTypes,
	}.Build()
	File_admin_proto = out.File
	file_admin_proto_rawDesc = nil
	file_admin_proto_goTypes = nil
	file_admin_proto_depIdxs = nil
}
