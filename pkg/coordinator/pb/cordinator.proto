syntax ="proto3";

package pb;

option go_package = ".";

service Coordinator {
    rpc CoordinatorLoginRequest(CoorinatorLogin) returns (CordinatorLoginResponce);
    rpc CoordinatorSignupRequest(Signup) returns(SignupResponce);
    rpc CoordinatorSignupVerifyRequest(Verify)returns(VerifyResponce);
    rpc CoordinatorAddPackage(AddPackage)returns(AddPackageResponce);
    rpc CoordinatorAddDestination(AddDestination)returns(AddDestinationResponce);
}

message AddDestination{
    string destinationName = 1;
    string Description = 2;
    int64 PackageId = 3;
    int64 minprice = 4;
    string image = 5;
    int64 MaxCapacity = 6;
}

message AddDestinationResponce{
    string status = 1;
}

message AddPackage{
    string packagename = 1;
    string Coorinatoremail = 2;
    string startdate = 3;
    string startlocation = 4;
    string enddate = 5;
    string endlocation = 6;
    int64  price = 7;
    string image = 8;
    int64  destinationCount = 9;
    string Destination = 10;
    int64 categoryId = 11; 
    string description = 12;
    int64 MaxCapacity = 13;
}

message AddPackageResponce{
    string status = 1;
}

message CoorinatorLogin{
    string email = 1;
    string password = 2;
    string role = 3;
}

message Package{
    string name = 1;
    string startlocation = 2;
    string endlocation = 3;
    string startdatetime = 4;
    string enddatetime = 5;
    int32  price = 6;
    string image = 7;
    int32  destinationCount = 8;
    string destination = 9;
}

message CordinatorLoginResponce{
    repeated Package Packages = 1;
    string            token = 2;
}

message Signup{
    string name =1;
    string email = 2;
    string phone = 3;
    string password = 4;
}

message SignupResponce{
    string status = 1;
    string message = 2;
}

message Verify{
    int32 OTP =1;
    string email = 2;
}

message VerifyResponce{
    string status = 1;
    string message = 2;
}